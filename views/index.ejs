<!DOCTYPE html>
<html lang="en" ng-app="nbaApp">
<head>
  <meta charset="UTF-8">
   <title>NBA App</title>
   <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
   <style type="text/css">

   body {
     width: 1000px;
     margin: 0 auto;
   }

   .x-axis {
     font-size: 12px;
   }

   .y-axis {
     font-size: 12px;
   }

   h5 {
     padding-top: 15px;
   }

   li {
     display: inline-block;
   }

   p {
     font-size: 12px;
   }
   .axis path,
   .axis line {
     fill: none;
     stroke: black;
     shape-rendering: crispEdges;
   }

   .axis text {
     font-family: sans-serif;
     font-size: 11px;
   }

   h5 {
     text-align: left;

   }

   form {
      padding-top: 15px
   }


  </style>
</head>
<body ng-controller="NbaCtrl">
  <section class="container" >


      <script type="text/javascript">
        function createGraph (playerData) {
            var w = 1020;
            var h = 385;
            var padding = 49;
            //player data
            var dataset = playerData;

            //Scale functions
            var xScale = d3.scale.linear()
                       .domain([3.75, d3.max(dataset, function(d) { return d[14]; })])
                       .range([padding, w - padding * 2]);

            var yScale = d3.scale.linear()
                       .domain([0.9, d3.max(dataset, function(d) { return d[11]; })])
                       .range([h - padding, padding]);

            var rScale = d3.scale.linear()
                       .domain([10, d3.max(dataset, function(d) { return d[16]; })])
                       .range([4, 20]);

            //Define X axis
            var xAxis = d3.svg.axis()
                        .scale(xScale)
                        .orient("bottom")
                        .ticks(5);

            //Define Y axis
            var yAxis = d3.svg.axis()
                        .scale(yScale)
                        .orient("left")
                        .ticks(5);

            //Create SVG element
            var svg = d3.select("body")
                        .append("svg")
                        .attr("width", w)
                        .attr("height", h)
                        .attr("class", "svg-container")


            //Create circles
            svg.selectAll("circle")
                       .data(dataset)
                       .enter()
                       .append("circle")
                       .attr("cx", function(d) {
                          return xScale(d[14]);
                       })
                       .attr("cy", function(d) {
                          return yScale(d[11]);
                       })
                       .attr("r", function(d) {
                          return rScale(d[16]);
                       })
                       .attr("ppg", function (d) {
                          return d[16];
                       })
                       .attr("name", function (d){
                          return d[1];
                       })
                       .attr("min", function (d){
                          return d[17];
                       })
                       .attr("fgPct", function (d){
                          return d[18];
                       })
                       .attr("threePct", function (d){
                          return d[19];
                       })
                       .attr("ftPct", function (d){
                          return d[20];
                       })
                       .attr("reb", function (d){
                          return d[21];
                       })
                       .attr("ast", function (d){
                          return d[22];
                       })
                       .attr("spd", function (d){
                         return d[14]
                       })
                       .attr("dist", function (d){
                         return d[11]
                       })
                       .attr("fill", function (d) {
                         return d[23];
                       })
                       .attr("stroke", function (d) {
                         return d[24];
                       })
                       .attr("opacity", function(d){
                         if (d[1] == "Stephen Curry") {
                           return 1;
                         } else {
                           return 0.3;
                         }
                       })
                       .attr("stroke-width", 3)
                       .on("mouseover", handleMouseOver)
                       .on("mouseout", handleMouseOut)

            function handleMouseOut(){
              d3.select(this)
              .attr("fill", function (d) {
                return d[23];
              })
              .attr("opacity", function(d){
                if (d[1] == "Stephen Curry") {
                  return 1;
                } else {
                  return 0.3;
                }
              })

              $("#playerName").text("Keeping Up With Curry?");
              $("#playerScore").text("");
              $("#playerMin").text("");
              $("#playerFG").text("");
              $("#playerThrees").text("");
              $("#playerFT").text("");
              $("#playerReb").text("");
              $("#playerAst").text("");
              $("#playerSpd").text("");
              $("#playerDist").text("");

            }

            function handleMouseOver(){
              d3.select(this)
              .attr("opacity", 1)
            $("#playerName").text(d3.select(this).attr("name"));
            $("#playerScore").text("PPG: " + d3.select(this).attr("ppg") + ",");
            $("#playerMin").text("MIN: " + d3.select(this).attr("min") + ",");
            $("#playerFG").text("FG%: " + d3.select(this).attr("fgPct") + ",");
            $("#playerThrees").text("3PT%: " + d3.select(this).attr("threePct") + ",");
            $("#playerFT").text("FT%: " + d3.select(this).attr("ftPct") + ",");
            $("#playerReb").text("REB: " + d3.select(this).attr("reb") + ",");
            $("#playerAst").text("AST: " + d3.select(this).attr("ast"));
            $("#playerSpd").text("Speed on Offense: " + d3.select(this).attr("spd") + "," );
            $("#playerDist").text("Distance on Offense: " + d3.select(this).attr("dist") + ",");

            }

            //Create X axis
            svg.append("g")
              .attr("class", "axis")
              .attr("transform", "translate(0," + (h - padding) + ")")
              .call(xAxis)

            //label for the x axis
            svg.append("text")
              .attr("x", 827 )
              .attr("y", 327 )
              .attr("class", "x-axis")
              .style("text-anchor", "middle")
              .text("Avg. Speed on Offense/Game (mph)");

            //Create Y axis
            svg.append("g")
              .attr("class", "axis")
              .attr("transform", "translate(" + padding + ",0)")
              .call(yAxis)

              // text label for the y axis
            svg.append("text")
              .attr("x", -146 )
              .attr("y", 15 )
              .attr("class", "y-axis")
              .attr("transform", "rotate(-90)")
              .style("text-anchor", "middle")
              .text("Distance on Offensive/Game (miles)");

        };

  </script>

    <h2 id="playerName">Keeping Up With Curry?</h2>
    <li id="playerSpd"></li>
    <li id="playerDist"></li>
    <li id="playerScore"></li>
    <li id="playerMin"></li>
    <li id="playerFG"></li>
    <li id="playerThrees"></li>
    <li id="playerFT"></li>
    <li id="playerReb"></li>
    <li id="playerAst"></li>

</section>

  <div class="container-fluid">
    <div class="row">
      <div class="col-md-6">
        <br>
        <p>The Golden State Warriors are statistically off to one of the hottest starts to a season in NBA history. However, the Warriors’ star sharpshooter, Steph Curry is having such a ridiculous season that some analysts believe if the season ended today, last year’s Most Valuable Player should not only repeat as MVP, but should also win the award for Most Improved Player. We know that Steph Curry appears to be virtually unguardable, but I wanted to take a closer look at why. Below I explored underappreciated statistics involving player movement throughout a game</p>
        <h5>Comparing Movement & Scoring</h5>
      </div>
      <div class="col-md-6">
        <br>
        <p>to see if there are any correlations to the amount a player scores. I wanted to see why the ‘Baby-Faced Assassin’ is so hard to keep up with on the court. I found that while there are quicker players in the league, no one moves at a quicker pace AND covers a greater distance throughout a game. This quickness and constant movement allows Curry to create shots for himself all game long. In the graph below, the radius of each plot corresponds to the player’s PPG. If you notice, nearly all of the most prolific scorers in the league accumulate over 1.2 miles of movement on offense/game.</p>

        <form ng-submit="addInput()" id="form">
          <input type="text" name="field" id="player-value" class="btn btn-default" placeholder="Paul George, Kristaps Porzingis">
          <input type="submit" id="submit-button" class="btn btn-default" value="Compare">
        </form>

      </div>
    </div>
  </div>

  <script type="text/javascript" src="/d3/d3.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.0.0-alpha1/jquery.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.15/angular.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.15/angular-resource.js"></script>
  <script src="/app.js"></script>
  <script src="/controllers/NbaStatsController.js"></script>
</body>
</html>
